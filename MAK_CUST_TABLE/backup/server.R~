library(shiny)

# Load the ggplot2 package which provides
# the 'mpg' dataset.
library(ggplot2)

setwd("C:/SQLDEVELOPER_CODE_PROD")
t_mak_cust <- read.csv("mak_cust_table.csv", header=TRUE, sep="|")
names(t_mak_cust) <- tolower(names(t_mak_cust))
t_mak_cust$co_orderid <- as.character(t_mak_cust$co_orderid)
t_mak_cust$loadid <- as.character(t_mak_cust$loadid)
t_mak_cust$vll_dest <- as.character(t_mak_cust$vll_dest)
t_mak_cust$schedarrivdate <- as.Date(t_mak_cust$schedarrivdate,'D-M-Y')
str(t_mak_cust)

df <- t_mak_cust
df$shipdate <- as.Date(df$shipdate)
df$schedshipdate <- as.Date(df$schedshipdate)
df$schedarrivdate <- as.Date(df$schedarrivdate)

# Code to Create A Barchart of the Status 
counts <- table(df$status)



# Define a server for the Shiny app
shinyServer(function(input, output) {
  
  # Filter data based on selections
  output$table <- DT::renderDataTable(DT::datatable({
    data <- df
    if (input$status != "All") {
      data <- data[data$status == input$status,]
    }
    if (input$shipdate != "All") {
      data <- data[data$shipdate == input$shipdate,]
    }
    if (input$demandcode != "All") {
      data <- data[data$u_dmdgroup_code == input$demandcode,]
    }
    if (input$source != "All") {
      data <- data[data$vll_source == input$source,]
    }
    data
  }))
  output$newHist <- renderPlot({barplot(counts, main="Pegging Status", xlab="Order Status", col="blue")
  })
})